<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.edupay.pay.dao.PayBankAccountMapper">
  <resultMap id="BaseResultMap" type="com.edupay.pay.entity.PayBankAccount">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="pay_bank_account_id" jdbcType="INTEGER" property="payBankAccountId" />
    <result column="application_id" jdbcType="INTEGER" property="applicationId" />
    <result column="application_account_id" jdbcType="VARCHAR" property="applicationAccountId" />
    <result column="account_type" jdbcType="INTEGER" property="accountType" />
    <result column="bank_account_name" jdbcType="VARCHAR" property="bankAccountName" />
    <result column="bank_account_no" jdbcType="VARCHAR" property="bankAccountNo" />
    <result column="partner_id" jdbcType="VARCHAR" property="partnerId" />
    <result column="bank_name" jdbcType="VARCHAR" property="bankName" />
    <result column="bank_branch" jdbcType="VARCHAR" property="bankBranch" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="create_uid" jdbcType="VARCHAR" property="createUid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    pay_bank_account_id, application_id, application_account_id, account_type, bank_account_name, 
    bank_account_no, partner_id, bank_name, bank_branch, status, city, remark, create_date, 
    create_uid
  </sql>
  <select id="selectByExample" parameterType="com.edupay.pay.entity.PayBankAccountExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bit_pay_bank_account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from bit_pay_bank_account
    where pay_bank_account_id = #{payBankAccountId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from bit_pay_bank_account
    where pay_bank_account_id = #{payBankAccountId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.edupay.pay.entity.PayBankAccountExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from bit_pay_bank_account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.edupay.pay.entity.PayBankAccount">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="payBankAccountId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into bit_pay_bank_account (application_id, application_account_id, 
      account_type, bank_account_name, bank_account_no, 
      partner_id, bank_name, bank_branch, 
      status, city, remark, 
      create_date, create_uid)
    values (#{applicationId,jdbcType=INTEGER}, #{applicationAccountId,jdbcType=VARCHAR}, 
      #{accountType,jdbcType=INTEGER}, #{bankAccountName,jdbcType=VARCHAR}, #{bankAccountNo,jdbcType=VARCHAR}, 
      #{partnerId,jdbcType=VARCHAR}, #{bankName,jdbcType=VARCHAR}, #{bankBranch,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{city,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, 
      #{createDate,jdbcType=TIMESTAMP}, #{createUid,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.edupay.pay.entity.PayBankAccount">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="payBankAccountId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into bit_pay_bank_account
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="applicationId != null">
        application_id,
      </if>
      <if test="applicationAccountId != null">
        application_account_id,
      </if>
      <if test="accountType != null">
        account_type,
      </if>
      <if test="bankAccountName != null">
        bank_account_name,
      </if>
      <if test="bankAccountNo != null">
        bank_account_no,
      </if>
      <if test="partnerId != null">
        partner_id,
      </if>
      <if test="bankName != null">
        bank_name,
      </if>
      <if test="bankBranch != null">
        bank_branch,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="city != null">
        city,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="createUid != null">
        create_uid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="applicationId != null">
        #{applicationId,jdbcType=INTEGER},
      </if>
      <if test="applicationAccountId != null">
        #{applicationAccountId,jdbcType=VARCHAR},
      </if>
      <if test="accountType != null">
        #{accountType,jdbcType=INTEGER},
      </if>
      <if test="bankAccountName != null">
        #{bankAccountName,jdbcType=VARCHAR},
      </if>
      <if test="bankAccountNo != null">
        #{bankAccountNo,jdbcType=VARCHAR},
      </if>
      <if test="partnerId != null">
        #{partnerId,jdbcType=VARCHAR},
      </if>
      <if test="bankName != null">
        #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="bankBranch != null">
        #{bankBranch,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="city != null">
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createUid != null">
        #{createUid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.edupay.pay.entity.PayBankAccountExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from bit_pay_bank_account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update bit_pay_bank_account
    <set>
      <if test="record.payBankAccountId != null">
        pay_bank_account_id = #{record.payBankAccountId,jdbcType=INTEGER},
      </if>
      <if test="record.applicationId != null">
        application_id = #{record.applicationId,jdbcType=INTEGER},
      </if>
      <if test="record.applicationAccountId != null">
        application_account_id = #{record.applicationAccountId,jdbcType=VARCHAR},
      </if>
      <if test="record.accountType != null">
        account_type = #{record.accountType,jdbcType=INTEGER},
      </if>
      <if test="record.bankAccountName != null">
        bank_account_name = #{record.bankAccountName,jdbcType=VARCHAR},
      </if>
      <if test="record.bankAccountNo != null">
        bank_account_no = #{record.bankAccountNo,jdbcType=VARCHAR},
      </if>
      <if test="record.partnerId != null">
        partner_id = #{record.partnerId,jdbcType=VARCHAR},
      </if>
      <if test="record.bankName != null">
        bank_name = #{record.bankName,jdbcType=VARCHAR},
      </if>
      <if test="record.bankBranch != null">
        bank_branch = #{record.bankBranch,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.city != null">
        city = #{record.city,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUid != null">
        create_uid = #{record.createUid,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update bit_pay_bank_account
    set pay_bank_account_id = #{record.payBankAccountId,jdbcType=INTEGER},
      application_id = #{record.applicationId,jdbcType=INTEGER},
      application_account_id = #{record.applicationAccountId,jdbcType=VARCHAR},
      account_type = #{record.accountType,jdbcType=INTEGER},
      bank_account_name = #{record.bankAccountName,jdbcType=VARCHAR},
      bank_account_no = #{record.bankAccountNo,jdbcType=VARCHAR},
      partner_id = #{record.partnerId,jdbcType=VARCHAR},
      bank_name = #{record.bankName,jdbcType=VARCHAR},
      bank_branch = #{record.bankBranch,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      city = #{record.city,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      create_uid = #{record.createUid,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.edupay.pay.entity.PayBankAccount">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update bit_pay_bank_account
    <set>
      <if test="applicationId != null">
        application_id = #{applicationId,jdbcType=INTEGER},
      </if>
      <if test="applicationAccountId != null">
        application_account_id = #{applicationAccountId,jdbcType=VARCHAR},
      </if>
      <if test="accountType != null">
        account_type = #{accountType,jdbcType=INTEGER},
      </if>
      <if test="bankAccountName != null">
        bank_account_name = #{bankAccountName,jdbcType=VARCHAR},
      </if>
      <if test="bankAccountNo != null">
        bank_account_no = #{bankAccountNo,jdbcType=VARCHAR},
      </if>
      <if test="partnerId != null">
        partner_id = #{partnerId,jdbcType=VARCHAR},
      </if>
      <if test="bankName != null">
        bank_name = #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="bankBranch != null">
        bank_branch = #{bankBranch,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="city != null">
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createUid != null">
        create_uid = #{createUid,jdbcType=VARCHAR},
      </if>
    </set>
    where pay_bank_account_id = #{payBankAccountId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.edupay.pay.entity.PayBankAccount">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update bit_pay_bank_account
    set application_id = #{applicationId,jdbcType=INTEGER},
      application_account_id = #{applicationAccountId,jdbcType=VARCHAR},
      account_type = #{accountType,jdbcType=INTEGER},
      bank_account_name = #{bankAccountName,jdbcType=VARCHAR},
      bank_account_no = #{bankAccountNo,jdbcType=VARCHAR},
      partner_id = #{partnerId,jdbcType=VARCHAR},
      bank_name = #{bankName,jdbcType=VARCHAR},
      bank_branch = #{bankBranch,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      city = #{city,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      create_uid = #{createUid,jdbcType=VARCHAR}
    where pay_bank_account_id = #{payBankAccountId,jdbcType=INTEGER}
  </update>
</mapper>